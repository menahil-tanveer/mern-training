[{"/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/index.js":"1","/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/store.js":"2","/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/reducer.js":"3","/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/actionTypes.js":"4","/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/actions.js":"5","/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/store/middleware/logger.js":"6","/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/store/middleware/func.js":"7","/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/store/middleware/displayToast.js":"8"},{"size":457,"mtime":1647259230688,"results":"9","hashOfConfig":"10"},{"size":1326,"mtime":1647258846004,"results":"11","hashOfConfig":"10"},{"size":1412,"mtime":1647197353834,"results":"12","hashOfConfig":"10"},{"size":122,"mtime":1647259070634,"results":"13","hashOfConfig":"10"},{"size":440,"mtime":1647259076683,"results":"14","hashOfConfig":"10"},{"size":667,"mtime":1647258701392,"results":"15","hashOfConfig":"10"},{"size":497,"mtime":1647256836713,"results":"16","hashOfConfig":"10"},{"size":221,"mtime":1647258968309,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"dk1b2r",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/index.js",["44"],[],"/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/store.js",["45","46"],[],"import { createStore, applyMiddleware } from \"redux\";\nimport reducer from \"./reducer\";\nimport logger from \"./store/middleware/logger\";\nimport displayToast from \"./store/middleware/displayToast\";\n\n// import func from \"./store/middleware/func\";\n\n//always pass a refernce of the function donot call it i.e. write 'reducer' rather than 'reducer()'\n\n// This is how a middleware is applied without using redux toolkit\n// const store = createStore(reducer, applyMiddleware(logger));\n\n//REDUX TOOLKIT (simplifies REDUX code)\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nconst store = configureStore({\n  reducer,\n  middleware: [...getDefaultMiddleware(), logger(\"console\"), displayToast], //note: the order of middlewares matter & getDefaultMiddleware gets an array of all the middlewares && spread operator is used to copy them\n});\n\n// passing a function in dispatch\n// here, type of this action is function\nstore.dispatch((dispatch, getState) => {\n  // Call an API\n  // If promise is resolved, dispatch this\n  dispatch({ type: \"bugsReceived\", bugs: [1, 2, 3] });\n  console.log(\"getState\", getState());\n  // If promise is rejected, dispatch that\n});\nconsole.log(\"dispatch error action::\");\nstore.dispatch({\n  type: \"error\",\n  payload: {\n    message: \"An error has occurred\",\n  },\n});\nexport default store;\n",["47","48"],"/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/reducer.js",["49"],[],"/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/actionTypes.js",[],[],"/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/actions.js",[],[],"/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/store/middleware/logger.js",[],[],"/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/store/middleware/func.js",[],[],"/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/store/middleware/displayToast.js",["50"],[],{"ruleId":"51","severity":1,"message":"52","line":1,"column":33,"nodeType":"53","messageId":"54","endLine":1,"endColumn":46},{"ruleId":"51","severity":1,"message":"55","line":1,"column":10,"nodeType":"53","messageId":"54","endLine":1,"endColumn":21},{"ruleId":"51","severity":1,"message":"56","line":1,"column":23,"nodeType":"53","messageId":"54","endLine":1,"endColumn":38},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":42,"column":43,"nodeType":"63","messageId":"64","endLine":42,"endColumn":45},{"ruleId":"61","severity":1,"message":"65","line":3,"column":15,"nodeType":"63","messageId":"64","endLine":3,"endColumn":17},"no-unused-vars","'errorOccurred' is defined but never used.","Identifier","unusedVar","'createStore' is defined but never used.","'applyMiddleware' is defined but never used.","no-native-reassign",["66"],"no-negated-in-lhs",["67"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]