{"ast":null,"code":"/**\n *\n * @param {*} store\n * @param {*} next i.e. a refernce to next middleware function & if its the only one then reducer that\n * is going to handle this action\n * @param {*} action i.e. the action that is dispatched\n */\n// const logger = (store, next, action) => {\n// }\n// implement curring i.e. convert a function with multiple params into multiple functions each with\n// a single parameter\n// to parameterise a middle ware simply:\nconst logger = param => store => next => action => {\n  console.log(\"logging:::\", param);\n  console.log(\"store\", store);\n  console.log(\"next\", next);\n  console.log(\"action\", action); // this will lead to reducer function which will alter the state\n\n  next(action);\n};\n\nexport default logger;","map":{"version":3,"sources":["/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/store/middleware/logger.js"],"names":["logger","param","store","next","action","console","log"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA,MAAMA,MAAM,GAAIC,KAAD,IAAYC,KAAD,IAAYC,IAAD,IAAWC,MAAD,IAAY;AACzDC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,KAA1B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB,EAJyD,CAKzD;;AACAD,EAAAA,IAAI,CAACC,MAAD,CAAJ;AACD,CAPD;;AAQA,eAAeJ,MAAf","sourcesContent":["/**\n *\n * @param {*} store\n * @param {*} next i.e. a refernce to next middleware function & if its the only one then reducer that\n * is going to handle this action\n * @param {*} action i.e. the action that is dispatched\n */\n// const logger = (store, next, action) => {\n// }\n\n// implement curring i.e. convert a function with multiple params into multiple functions each with\n// a single parameter\n// to parameterise a middle ware simply:\nconst logger = (param) => (store) => (next) => (action) => {\n  console.log(\"logging:::\", param);\n  console.log(\"store\", store);\n  console.log(\"next\", next);\n  console.log(\"action\", action);\n  // this will lead to reducer function which will alter the state\n  next(action);\n};\nexport default logger;\n"]},"metadata":{},"sourceType":"module"}