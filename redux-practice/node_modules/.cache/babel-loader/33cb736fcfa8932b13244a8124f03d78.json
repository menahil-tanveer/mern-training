{"ast":null,"code":"import { bugAdded, bugResolved } from \"./actions\";\nimport store from \"./store\"; // if written between dispatching actions, we will not be notified about the second action\n// const unsubscribe = store.subscribe(() => {\n//   console.log(\"store changed\", store.getState());\n// });\n\nstore.dispatch(bugAdded(\"bug 2 :)\"));\nstore.dispatch(bugResolved(1));\nconsole.log(\"store:::\", store);\nconsole.log(\"state\");","map":{"version":3,"sources":["/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/index.js"],"names":["bugAdded","bugResolved","store","dispatch","console","log"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,WAAtC;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;AACA;AACA;AACA;;AACAA,KAAK,CAACC,QAAN,CAAeH,QAAQ,CAAC,UAAD,CAAvB;AACAE,KAAK,CAACC,QAAN,CAAeF,WAAW,CAAC,CAAD,CAA1B;AAEAG,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,KAAxB;AACAE,OAAO,CAACC,GAAR,CAAY,OAAZ","sourcesContent":["import { bugAdded, bugResolved } from \"./actions\";\nimport store from \"./store\";\n// if written between dispatching actions, we will not be notified about the second action\n// const unsubscribe = store.subscribe(() => {\n//   console.log(\"store changed\", store.getState());\n// });\nstore.dispatch(bugAdded(\"bug 2 :)\"));\nstore.dispatch(bugResolved(1));\n\nconsole.log(\"store:::\", store);\nconsole.log(\"state\")\n"]},"metadata":{},"sourceType":"module"}