{"ast":null,"code":"import * as actions from \"./actionTypes\";\nlet lastId = 0;\n/**\n * \n * @param {*} state \n * @param {*} action \n * @returns \n * When app starts initially state is undefined, so when the reducer is called it sets it to an empty\n   array\n   @description A reducer is a pure function i.e. it always returns the same result no matter what\n   the input. \n   Export this function as default object to be able to use it in other modules \n */\n\nfunction reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  //   if (actions.BUG_ADDED) {\n  //     return [\n  //       ...state,\n  //       {\n  //         id: lastId++,\n  //         description: action.payload.description,\n  //         resolved: \"\",\n  //       },\n  //     ];\n  //   } else if (actions.BUG_REMOVED) {\n  //     return state.filter((bug) => bug.id != action.payload.id);\n  //   }\n  //   return state;\n  //--------------- OR USE SWITCH CASE INSTEAD -----------------\n  switch (action.type) {\n    case actions.BUG_ADDED:\n      return [...state, {\n        id: lastId++,\n        description: action.payload.description,\n        resolved: \"\"\n      }];\n\n    case actions.BUG_REMOVED:\n      return state.filter(bug => bug.id != action.payload.id);\n\n    case actions.BUG_RESOLVED:\n      return state.map(bug => bug.id != action.payload.id ? bug : { ...bug,\n        res\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/reducer.js"],"names":["actions","lastId","reducer","state","action","type","BUG_ADDED","id","description","payload","resolved","BUG_REMOVED","filter","bug","BUG_RESOLVED","map","res"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,eAAzB;AAEA,IAAIC,MAAM,GAAG,CAAb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,OAAT,GAAqC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,OAAO,CAACM,SAAb;AACE,aAAO,CACL,GAAGH,KADE,EAEL;AACEI,QAAAA,EAAE,EAAEN,MAAM,EADZ;AAEEO,QAAAA,WAAW,EAAEJ,MAAM,CAACK,OAAP,CAAeD,WAF9B;AAGEE,QAAAA,QAAQ,EAAE;AAHZ,OAFK,CAAP;;AAQF,SAAKV,OAAO,CAACW,WAAb;AACM,aAAOR,KAAK,CAACS,MAAN,CAAcC,GAAD,IAASA,GAAG,CAACN,EAAJ,IAAUH,MAAM,CAACK,OAAP,CAAeF,EAA/C,CAAP;;AACJ,SAAKP,OAAO,CAACc,YAAb;AACI,aAAOX,KAAK,CAACY,GAAN,CAAWF,GAAG,IAAIA,GAAG,CAACN,EAAJ,IAAUH,MAAM,CAACK,OAAP,CAAeF,EAAzB,GAA8BM,GAA9B,GAAoC,EAAC,GAAGA,GAAJ;AAASG,QAAAA;AAAT,OAAtD,CAAP;;AACN;AACE,aAAOb,KAAP;AAfJ;AAiBD;;AACD,eAAeD,OAAf","sourcesContent":["import * as actions from \"./actionTypes\";\n\nlet lastId = 0;\n/**\n * \n * @param {*} state \n * @param {*} action \n * @returns \n * When app starts initially state is undefined, so when the reducer is called it sets it to an empty\n   array\n   @description A reducer is a pure function i.e. it always returns the same result no matter what\n   the input. \n   Export this function as default object to be able to use it in other modules \n */\nfunction reducer(state = [], action) {\n  //   if (actions.BUG_ADDED) {\n  //     return [\n  //       ...state,\n  //       {\n  //         id: lastId++,\n  //         description: action.payload.description,\n  //         resolved: \"\",\n  //       },\n  //     ];\n  //   } else if (actions.BUG_REMOVED) {\n  //     return state.filter((bug) => bug.id != action.payload.id);\n  //   }\n  //   return state;\n\n  //--------------- OR USE SWITCH CASE INSTEAD -----------------\n  switch (action.type) {\n    case actions.BUG_ADDED:\n      return [\n        ...state,\n        {\n          id: lastId++,\n          description: action.payload.description,\n          resolved: \"\",\n        },\n      ];\n    case actions.BUG_REMOVED:\n          return state.filter((bug) => bug.id != action.payload.id);\n      case actions.BUG_RESOLVED:\n          return state.map( bug => bug.id != action.payload.id ? bug : {...bug, res})\n    default:\n      return state;\n  }\n}\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}