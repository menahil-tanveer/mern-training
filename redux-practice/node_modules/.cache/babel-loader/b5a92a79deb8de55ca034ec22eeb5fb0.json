{"ast":null,"code":"const func = _ref => {\n  let {\n    dispatch,\n    getState\n  } = _ref;\n  return next => action => {\n    // if the action that is dispatched is a function then execute that function\n    if (typeof action == \"function\") {\n      action(dispatch, getState);\n    } // else pass it to the next middleware function or the reducer\n    else {\n      next(action);\n    }\n  };\n};\n\nexport default func;","map":{"version":3,"sources":["/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/store/middleware/func.js"],"names":["func","dispatch","getState","next","action"],"mappings":"AAAA,MAAMA,IAAI,GACR;AAAA,MAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD;AAAA,SACCC,IAAD,IACCC,MAAD,IAAY;AACV;AACA,QAAI,OAAOA,MAAP,IAAiB,UAArB,EAAiC;AAC/BA,MAAAA,MAAM,CAACH,QAAD,EAAWC,QAAX,CAAN;AACD,KAFD,CAGA;AAHA,SAIK;AACHC,MAAAA,IAAI,CAACC,MAAD,CAAJ;AACD;AACF,GAXD;AAAA,CADF;;AAaA,eAAeJ,IAAf","sourcesContent":["const func =\n  ({ dispatch, getState }) =>\n  (next) =>\n  (action) => {\n    // if the action that is dispatched is a function then execute that function\n    if (typeof action == \"function\") {\n      action(dispatch, getState);\n    }\n    // else pass it to the next middleware function or the reducer\n    else {\n      next(action);\n    }\n  };\nexport default func;\n"]},"metadata":{},"sourceType":"module"}