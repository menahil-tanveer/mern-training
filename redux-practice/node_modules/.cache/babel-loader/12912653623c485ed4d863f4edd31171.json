{"ast":null,"code":"import { bugAdded, bugResolved } from \"./store/bugs\";\nimport configureStore from \"./store/configureStore\";\nimport * as actions from \"./store/bugs\";\nconst store = configureStore(); // if written between dispatching actions, we will not be notified about the second action\n// const unsubscribe = store.subscribe(() => {\n//   console.log(\"store changed\", store.getState());\n// });\n// add bug\n\nstore.dispatch(bugAdded(\"bug 2\")); // resolve\n\nstore.dispatch(bugResolved(0)); // console.log(\"store:\", store);\n// console.log(\"state:\", store.getState());\n\nstore.dispatch(apiCallBegan({\n  url: \"/bugs\",\n  onSucces: \"bugsReceived\"\n}));","map":{"version":3,"sources":["/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/index.js"],"names":["bugAdded","bugResolved","configureStore","actions","store","dispatch","apiCallBegan","url","onSucces"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,cAAtC;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAO,KAAKC,OAAZ,MAAyB,cAAzB;AACA,MAAMC,KAAK,GAAGF,cAAc,EAA5B,C,CACA;AACA;AACA;AACA;AACA;;AACAE,KAAK,CAACC,QAAN,CAAeL,QAAQ,CAAC,OAAD,CAAvB,E,CACA;;AACAI,KAAK,CAACC,QAAN,CAAeJ,WAAW,CAAC,CAAD,CAA1B,E,CACA;AACA;;AACAG,KAAK,CAACC,QAAN,CACEC,YAAY,CAAC;AACXC,EAAAA,GAAG,EAAE,OADM;AAEXC,EAAAA,QAAQ,EAAE;AAFC,CAAD,CADd","sourcesContent":["import { bugAdded, bugResolved } from \"./store/bugs\";\nimport configureStore from \"./store/configureStore\";\nimport * as actions from \"./store/bugs\";\nconst store = configureStore();\n// if written between dispatching actions, we will not be notified about the second action\n// const unsubscribe = store.subscribe(() => {\n//   console.log(\"store changed\", store.getState());\n// });\n// add bug\nstore.dispatch(bugAdded(\"bug 2\"));\n// resolve\nstore.dispatch(bugResolved(0));\n// console.log(\"store:\", store);\n// console.log(\"state:\", store.getState());\nstore.dispatch(\n  apiCallBegan({\n    url: \"/bugs\",\n    onSucces: \"bugsReceived\",\n  })\n);\n"]},"metadata":{},"sourceType":"module"}