{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { apiCallBegan } from \"./api\";\nconst slice = createSlice({\n  name: \"users\",\n  initialState: [],\n  reducers: {\n    //actions => actions handlers\n    userAdded: (state, action) => {\n      state.push({\n        id: state.length + 1,\n        name: action.payload.name\n      });\n    },\n    usersAdded: (state, action) => {\n      state.push(...action.payload);\n      console.log(\"state!\", state);\n    }\n  }\n});\nexport const {\n  userAdded,\n  usersAdded\n} = slice.actions;\nexport default slice.reducer; // CONFIG FILE CONSTANTS\n\nconst URL = \"/users\"; // ACTION CREATORS\n\nexport const loadUsers = () => apiCallBegan({\n  onSuccess: usersAdded.type\n});","map":{"version":3,"sources":["/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/store/users.js"],"names":["createSlice","apiCallBegan","slice","name","initialState","reducers","userAdded","state","action","push","id","length","payload","usersAdded","console","log","actions","reducer","URL","loadUsers","onSuccess","type"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,QAA6B,OAA7B;AACA,MAAMC,KAAK,GAAGF,WAAW,CAAC;AACxBG,EAAAA,IAAI,EAAE,OADkB;AAExBC,EAAAA,YAAY,EAAE,EAFU;AAGxBC,EAAAA,QAAQ,EAAE;AACR;AACAC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5BD,MAAAA,KAAK,CAACE,IAAN,CAAW;AACTC,QAAAA,EAAE,EAAEH,KAAK,CAACI,MAAN,GAAe,CADV;AAETR,QAAAA,IAAI,EAAEK,MAAM,CAACI,OAAP,CAAeT;AAFZ,OAAX;AAID,KAPO;AAQRU,IAAAA,UAAU,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC7BD,MAAAA,KAAK,CAACE,IAAN,CAAW,GAAGD,MAAM,CAACI,OAArB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,KAAtB;AACD;AAXO;AAHc,CAAD,CAAzB;AAkBA,OAAO,MAAM;AAAED,EAAAA,SAAF;AAAaO,EAAAA;AAAb,IAA4BX,KAAK,CAACc,OAAxC;AACP,eAAed,KAAK,CAACe,OAArB,C,CACA;;AACA,MAAMC,GAAG,GAAG,QAAZ,C,CACA;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAKlB,YAAY,CAAC;AACvCmB,EAAAA,SAAS,EAAEP,UAAU,CAACQ;AADiB,CAAD,CAAnC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { apiCallBegan } from \"./api\";\nconst slice = createSlice({\n  name: \"users\",\n  initialState: [],\n  reducers: {\n    //actions => actions handlers\n    userAdded: (state, action) => {\n      state.push({\n        id: state.length + 1,\n        name: action.payload.name,\n      });\n    },\n    usersAdded: (state, action) => {\n      state.push(...action.payload);\n      console.log(\"state!\", state);\n    },\n  },\n});\n\nexport const { userAdded, usersAdded } = slice.actions;\nexport default slice.reducer;\n// CONFIG FILE CONSTANTS\nconst URL = \"/users\";\n// ACTION CREATORS\nexport const loadUsers = () =>apiCallBegan({\n    onSuccess: usersAdded.type,\n  });\n"]},"metadata":{},"sourceType":"module"}