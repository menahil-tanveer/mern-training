{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconsole.log(\"here.......!\");\nconst slice = createSlice({\n  name: \"users\",\n  initialState: [],\n  reducers: {\n    //actions => actions handlers\n    userAdded: (state, action) => {\n      state.push({\n        id: state.length + 1,\n        name: action.payload.name\n      });\n    },\n    usersAdded: (state, action) => {\n      console.log(\"action payload::::\", action.payload);\n      state = action.payload;\n      action.payload.forEach(element => {\n        state.push;\n      });\n      console.log(\"state!\", state);\n    }\n  }\n});\nexport const {\n  userAdded,\n  usersAdded\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"sources":["/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/store/users.js"],"names":["createSlice","console","log","slice","name","initialState","reducers","userAdded","state","action","push","id","length","payload","usersAdded","forEach","element","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACAC,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,MAAMC,KAAK,GAAGH,WAAW,CAAC;AACxBI,EAAAA,IAAI,EAAE,OADkB;AAExBC,EAAAA,YAAY,EAAE,EAFU;AAGxBC,EAAAA,QAAQ,EAAE;AACR;AACAC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5BD,MAAAA,KAAK,CAACE,IAAN,CAAW;AACTC,QAAAA,EAAE,EAAEH,KAAK,CAACI,MAAN,GAAe,CADV;AAETR,QAAAA,IAAI,EAAEK,MAAM,CAACI,OAAP,CAAeT;AAFZ,OAAX;AAID,KAPO;AAQRU,IAAAA,UAAU,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC7BR,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCO,MAAM,CAACI,OAAzC;AACEL,MAAAA,KAAK,GAAGC,MAAM,CAACI,OAAf;AACAJ,MAAAA,MAAM,CAACI,OAAP,CAAeE,OAAf,CAAuBC,OAAO,IAAI;AAC9BR,QAAAA,KAAK,CAACE,IAAN;AACH,OAFD;AAGAT,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBM,KAAtB;AACH;AAfO;AAHc,CAAD,CAAzB;AAsBA,OAAO,MAAM;AAAED,EAAAA,SAAF;AAAaO,EAAAA;AAAb,IAA4BX,KAAK,CAACc,OAAxC;AACP,eAAed,KAAK,CAACe,OAArB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nconsole.log(\"here.......!\");\nconst slice = createSlice({\n  name: \"users\",\n  initialState: [],\n  reducers: {\n    //actions => actions handlers\n    userAdded: (state, action) => {\n      state.push({\n        id: state.length + 1,\n        name: action.payload.name,\n      });\n    },\n    usersAdded: (state, action) => {\n      console.log(\"action payload::::\", action.payload);\n        state = action.payload;\n        action.payload.forEach(element => {\n            state.push\n        });\n        console.log(\"state!\", state)\n    },\n  },\n});\n\nexport const { userAdded, usersAdded } = slice.actions;\nexport default slice.reducer;\n"]},"metadata":{},"sourceType":"module"}