{"ast":null,"code":"import { bugAdded, bugResolved, errorOccurred } from \"./actions\";\nimport store from \"./store\"; // if written between dispatching actions, we will not be notified about the second action\n// const unsubscribe = store.subscribe(() => {\n//   console.log(\"store changed\", store.getState());\n// });\n// add bug\n\nstore.dispatch(bugAdded(\"bug 2\")); // resolve\n\nstore.dispatch(bugResolved(0)); // console.log(\"store:::\", store);\n// console.log(\"state:::\", store.getState());","map":{"version":3,"sources":["/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/index.js"],"names":["bugAdded","bugResolved","errorOccurred","store","dispatch"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,aAAhC,QAAqD,WAArD;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;AACA;AACA;AACA;AACA;;AACAA,KAAK,CAACC,QAAN,CAAeJ,QAAQ,CAAC,OAAD,CAAvB,E,CACA;;AACAG,KAAK,CAACC,QAAN,CAAeH,WAAW,CAAC,CAAD,CAA1B,E,CACA;AACA","sourcesContent":["import { bugAdded, bugResolved, errorOccurred } from \"./actions\";\nimport store from \"./store\";\n// if written between dispatching actions, we will not be notified about the second action\n// const unsubscribe = store.subscribe(() => {\n//   console.log(\"store changed\", store.getState());\n// });\n// add bug\nstore.dispatch(bugAdded(\"bug 2\"));\n// resolve\nstore.dispatch(bugResolved(0));\n// console.log(\"store:::\", store);\n// console.log(\"state:::\", store.getState());\n"]},"metadata":{},"sourceType":"module"}