{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nlet lastId = 0;\n/**\n * @description createSlice method replaces createAction & createReducer methods\n * Note that the name of reducers' properties can now be set to anything we want and it will be the only\n * place to update the name if we want to change it later in time unlike when we use createAction & createReducer\n *\n */\n\nconst slice = createSlice({\n  name: \"bugs\",\n  initialState: [],\n  reducers: {\n    bugAdded: (state, action) => {\n      state.push({\n        id: lastId++,\n        description: action.payload.description,\n        resolved: false\n      });\n    },\n    bugResolved: (state, action) => {\n      const index = state.findIndex(bug => bug.id === action.payload.id);\n      state[index].resolved = true;\n    }\n  }\n});\nexport const {\n  bugAdded,\n  bugResolved\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"sources":["/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/store/bugs.js"],"names":["createSlice","lastId","slice","name","initialState","reducers","bugAdded","state","action","push","id","description","payload","resolved","bugResolved","index","findIndex","bug","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,IAAIC,MAAM,GAAG,CAAb;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,KAAK,GAAGF,WAAW,CAAC;AACxBG,EAAAA,IAAI,EAAE,MADkB;AAExBC,EAAAA,YAAY,EAAE,EAFU;AAGxBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACE,IAAN,CAAW;AACTC,QAAAA,EAAE,EAAET,MAAM,EADD;AAETU,QAAAA,WAAW,EAAEH,MAAM,CAACI,OAAP,CAAeD,WAFnB;AAGTE,QAAAA,QAAQ,EAAE;AAHD,OAAX;AAKD,KAPO;AAQRC,IAAAA,WAAW,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;AAC9B,YAAMO,KAAK,GAAGR,KAAK,CAACS,SAAN,CAAiBC,GAAD,IAASA,GAAG,CAACP,EAAJ,KAAWF,MAAM,CAACI,OAAP,CAAeF,EAAnD,CAAd;AACAH,MAAAA,KAAK,CAACQ,KAAD,CAAL,CAAaF,QAAb,GAAwB,IAAxB;AACD;AAXO;AAHc,CAAD,CAAzB;AAiBA,OAAO,MAAM;AAAEP,EAAAA,QAAF;AAAYQ,EAAAA;AAAZ,IAA4BZ,KAAK,CAACgB,OAAxC;AACP,eAAehB,KAAK,CAACiB,OAArB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nlet lastId = 0;\n/**\n * @description createSlice method replaces createAction & createReducer methods\n * Note that the name of reducers' properties can now be set to anything we want and it will be the only\n * place to update the name if we want to change it later in time unlike when we use createAction & createReducer\n *\n */\nconst slice = createSlice({\n  name: \"bugs\",\n  initialState: [],\n  reducers: {\n    bugAdded: (state, action) => {\n      state.push({\n        id: lastId++,\n        description: action.payload.description,\n        resolved: false,\n      });\n    },\n    bugResolved: (state, action) => {\n      const index = state.findIndex((bug) => bug.id === action.payload.id);\n      state[index].resolved = true;\n    },\n  },\n});\nexport const { bugAdded, bugResolved } = slice.actions;\nexport default slice.reducer;\n"]},"metadata":{},"sourceType":"module"}