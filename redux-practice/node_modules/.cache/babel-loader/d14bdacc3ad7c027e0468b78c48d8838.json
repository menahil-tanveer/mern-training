{"ast":null,"code":"const displayToast = _ref => {\n  let {\n    dispatch,\n    getState\n  } = _ref;\n  return next => action => {\n    if (action.type == \"error\") {\n      console.log(\"Error:\", action.payload.message);\n    } // else pass it to the next middleware function or the reducer\n    else {\n      next();\n    }\n  };\n};\n\nexport default displayToast;","map":{"version":3,"sources":["/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/store/middleware/displayToast.js"],"names":["displayToast","dispatch","getState","next","action","type","console","log","payload","message"],"mappings":"AAAA,MAAMA,YAAY,GAChB;AAAA,MAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD;AAAA,SACCC,IAAD,IACCC,MAAD,IAAY;AACV,QAAIA,MAAM,CAACC,IAAP,IAAe,OAAnB,EAA4B;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAM,CAACI,OAAP,CAAeC,OAArC;AACD,KAFD,CAGA;AAHA,SAIK;AACHN,MAAAA,IAAI;AACL;AACF,GAVD;AAAA,CADF;;AAYA,eAAeH,YAAf","sourcesContent":["const displayToast =\n  ({ dispatch, getState }) =>\n  (next) =>\n  (action) => {\n    if (action.type == \"error\") {\n      console.log(\"Error:\", action.payload.message);\n    }\n    // else pass it to the next middleware function or the reducer\n    else {\n      next();\n    }\n  };\nexport default displayToast;\n"]},"metadata":{},"sourceType":"module"}