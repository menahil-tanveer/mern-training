{"ast":null,"code":"// import * as actions from \"./actionTypes\";\n// let lastId = 0;\n// /**\n//  * \n//  * @param {*} state \n//  * @param {*} action \n//  * @returns \n//  * When app starts initially state is undefined, so when the reducer is called it sets it to an empty\n//    array\n//    @description A reducer is a pure function i.e. it always returns the same result no matter what\n//    the input. \n//    Export this function as default object to be able to use it in other modules \n//  */\n// function reducer(state = [], action) {\n//   //   if (actions.BUG_ADDED) {\n//   //     return [\n//   //       ...state,\n//   //       {\n//   //         id: lastId++,\n//   //         description: action.payload.description,\n//   //         resolved: \"\",\n//   //       },\n//   //     ];\n//   //   } else if (actions.BUG_REMOVED) {\n//   //     return state.filter((bug) => bug.id != action.payload.id);\n//   //   }\n//   //   return state;\n//   //--------------- OR USE SWITCH CASE INSTEAD -----------------\n//   switch (action.type) {\n//     case actions.BUG_ADDED:\n//       return [\n//         ...state,\n//         {\n//           id: lastId++,\n//           description: action.payload.description,\n//           resolved: \"\",\n//         },\n//       ];\n//     case actions.BUG_REMOVED:\n//       return state.filter((bug) => bug.id != action.payload.id);\n//     case actions.BUG_RESOLVED:\n//       return state.map((bug) =>\n//         bug.id !== action.payload.id ? bug : { ...bug, resolved: true }\n//       );\n//     default:\n//       return state;\n//   }\n// }\n// export default reducer;","map":{"version":3,"sources":["/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/reducer.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import * as actions from \"./actionTypes\";\n\n// let lastId = 0;\n// /**\n//  * \n//  * @param {*} state \n//  * @param {*} action \n//  * @returns \n//  * When app starts initially state is undefined, so when the reducer is called it sets it to an empty\n//    array\n//    @description A reducer is a pure function i.e. it always returns the same result no matter what\n//    the input. \n//    Export this function as default object to be able to use it in other modules \n//  */\n// function reducer(state = [], action) {\n//   //   if (actions.BUG_ADDED) {\n//   //     return [\n//   //       ...state,\n//   //       {\n//   //         id: lastId++,\n//   //         description: action.payload.description,\n//   //         resolved: \"\",\n//   //       },\n//   //     ];\n//   //   } else if (actions.BUG_REMOVED) {\n//   //     return state.filter((bug) => bug.id != action.payload.id);\n//   //   }\n//   //   return state;\n\n//   //--------------- OR USE SWITCH CASE INSTEAD -----------------\n//   switch (action.type) {\n//     case actions.BUG_ADDED:\n//       return [\n//         ...state,\n//         {\n//           id: lastId++,\n//           description: action.payload.description,\n//           resolved: \"\",\n//         },\n//       ];\n//     case actions.BUG_REMOVED:\n//       return state.filter((bug) => bug.id != action.payload.id);\n//     case actions.BUG_RESOLVED:\n//       return state.map((bug) =>\n//         bug.id !== action.payload.id ? bug : { ...bug, resolved: true }\n//       );\n//     default:\n//       return state;\n//   }\n// }\n// export default reducer;\n"]},"metadata":{},"sourceType":"module"}