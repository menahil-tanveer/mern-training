{"ast":null,"code":"import axios from \"axios\";\nimport { usersAdded } from \"../users\";\nimport * as actions from \"../api\";\n\nconst api = _ref => {\n  let {\n    dispatch\n  } = _ref;\n  return next => async action => {\n    console.log();\n    if (action.type !== \"api/CallBegan\") return next(action);\n    next(action); // if not placed here, this action will be swallowed and redux will move onto the actions defined below this\n\n    const {\n      url,\n      onSuccess,\n      onError\n    } = action.payload; // if (onStart) dispatch({ type: onStart });\n    // next(action);\n\n    try {\n      const response = await axios.request({\n        baseURL: \"https://jsonplaceholder.typicode.com/users\" // data, // optional\n\n      });\n      console.log(\"onSuccess\");\n      if (onSuccess) dispatch(usersAdded(response.data));\n    } catch (error) {\n      // General error message\n      dispatch(actions.apiCallFailed(error)); // Specific error message\n\n      if (onError) dispatch({\n        type: onError,\n        payload: error\n      });\n    }\n  };\n};\n\nexport default api;","map":{"version":3,"sources":["/Users/menahaltanveer/Desktop/mern-training/redux-practice/src/store/middleware/api.js"],"names":["axios","usersAdded","actions","api","dispatch","next","action","console","log","type","url","onSuccess","onError","payload","response","request","baseURL","data","error","apiCallFailed"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,OAAO,KAAKC,OAAZ,MAAyB,QAAzB;;AACA,MAAMC,GAAG,GACP;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SACCC,IAAD,IACI,MAAOC,MAAP,IAAkB;AAClBC,IAAAA,OAAO,CAACC,GAAR;AACF,QAAIF,MAAM,CAACG,IAAP,KAAgB,eAApB,EAAqC,OAAOJ,IAAI,CAACC,MAAD,CAAX;AACrCD,IAAAA,IAAI,CAACC,MAAD,CAAJ,CAHoB,CAGN;;AACd,UAAM;AAAEI,MAAAA,GAAF;AAAOC,MAAAA,SAAP;AAAkBC,MAAAA;AAAlB,QAA8BN,MAAM,CAACO,OAA3C,CAJoB,CAKpB;AACA;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,OAAN,CAAc;AACnCC,QAAAA,OAAO,EAAE,4CAD0B,CAEnC;;AAFmC,OAAd,CAAvB;AAIAT,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,UAAIG,SAAJ,EAAeP,QAAQ,CAACH,UAAU,CAACa,QAAQ,CAACG,IAAV,CAAX,CAAR;AAChB,KAPD,CAOE,OAAOC,KAAP,EAAc;AACd;AACAd,MAAAA,QAAQ,CAACF,OAAO,CAACiB,aAAR,CAAsBD,KAAtB,CAAD,CAAR,CAFc,CAGd;;AACA,UAAIN,OAAJ,EAAaR,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEG,OAAR;AAAiBC,QAAAA,OAAO,EAAEK;AAA1B,OAAD,CAAR;AACd;AACF,GAtBD;AAAA,CADF;;AAwBA,eAAef,GAAf","sourcesContent":["import axios from \"axios\";\nimport { usersAdded } from \"../users\";\nimport * as actions from \"../api\"\nconst api =\n  ({ dispatch }) =>\n  (next) =>\n      async (action) => {\n      console.log()\n    if (action.type !== \"api/CallBegan\") return next(action);\n    next(action); // if not placed here, this action will be swallowed and redux will move onto the actions defined below this\n    const { url, onSuccess, onError } = action.payload;\n    // if (onStart) dispatch({ type: onStart });\n    // next(action);\n    try {\n      const response = await axios.request({\n        baseURL: \"https://jsonplaceholder.typicode.com/users\",\n        // data, // optional\n      });\n      console.log(\"onSuccess\");\n      if (onSuccess) dispatch(usersAdded(response.data));\n    } catch (error) {\n      // General error message\n      dispatch(actions.apiCallFailed(error));\n      // Specific error message\n      if (onError) dispatch({ type: onError, payload: error });\n    }\n  };\nexport default api;\n"]},"metadata":{},"sourceType":"module"}